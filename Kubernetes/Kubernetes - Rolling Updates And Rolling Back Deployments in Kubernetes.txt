There is a production deployment planned for next week. The Nautilus DevOps team wants to test the deployment update and rollback on Dev environment first so that they can identify the risks in advance. Below you can find more details about the plan they want to execute.



Create a namespace xfusion. Create a deployment called httpd-deploy under this new namespace, It should have one container called httpd, use httpd:2.4.27 image and 4 replicas. The deployment should use RollingUpdate strategy with maxSurge=1, and maxUnavailable=2. Also create a NodePort type service named httpd-service and expose the deployment on nodePort: 30008.

Now upgrade the deployment to version httpd:2.4.43 using a rolling update.

Finally, once all pods are updated undo the recent update and roll back to the previous/original version.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


kubectl create ns nautilus


apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nautilus
  name: httpd-deploy
spec:
  selector:
    matchLabels:
      app: httpd-app
  replicas: 4
  template:
    metadata:
      name: httpd-deploy
      labels:
        app: httpd-app
    spec:
      containers:
      - image: httpd:2.4.27
        name: httpd
        ports:
        - containerPort: 80
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
      
      
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
  namespace: nautilus
  labels:
    app: httpd-app
spec:
  selector:
    app: httpd-app
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    nodePort: 30008     
 
 
 kubectl set image deployment/httpd-deploy httpd=httpd:2.4.43 --namespace=xfusion
 
 kubectl rollout history deployment/httpd-deploy --namespace=nautilus
 
 kubectl rollout undo deployment.apps/httpd-deploy --namespace=nautilus --to-revision=1
 
 

